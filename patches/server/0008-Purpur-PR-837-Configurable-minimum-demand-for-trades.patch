From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Totorewa <76272501+totorewa@users.noreply.github.com>
Date: Fri, 7 Jan 2022 21:34:57 +1300
Subject: [PATCH] Configurable minimum demand for trades

Addresses MC-163962 where villager demand decreases indefinitely. Paper
adds a patch to fix this by preventing demand from going below zero.
This patch adds a config option to allow the minimum demand to instead
be configurable.

Updated to Prismarine by AlphaKR93 <alphakr93@outlook.com>


diff --git a/src/main/java/net/minecraft/world/entity/npc/Villager.java b/src/main/java/net/minecraft/world/entity/npc/Villager.java
index 90ab67d6dcbd3961fcaa05b034a6d35e7fd096b6..7dd28482e54b44ba2b812a14f9af3192a6325a65 100644
--- a/src/main/java/net/minecraft/world/entity/npc/Villager.java
+++ b/src/main/java/net/minecraft/world/entity/npc/Villager.java
@@ -554,7 +554,7 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
         while (iterator.hasNext()) {
             MerchantOffer merchantrecipe = (MerchantOffer) iterator.next();
 
-            merchantrecipe.updateDemand();
+            merchantrecipe.updateDemand(this.level.prismarineConfig.villagerMinimumDemand);
         }
 
     }
diff --git a/src/main/java/net/minecraft/world/item/trading/MerchantOffer.java b/src/main/java/net/minecraft/world/item/trading/MerchantOffer.java
index c9cb0717c2793acd5b5870a6cc4d672d69a40026..7e261c543e3a6f7cc6552ae078ddf6f1cf15ebe4 100644
--- a/src/main/java/net/minecraft/world/item/trading/MerchantOffer.java
+++ b/src/main/java/net/minecraft/world/item/trading/MerchantOffer.java
@@ -132,9 +132,15 @@ public class MerchantOffer {
     }
 
     public void updateDemand() {
-        this.demand = Math.max(0, this.demand + this.uses - (this.maxUses - this.uses)); // Paper
+        this.updateDemand(0); // Prismarine
     }
 
+    // Prismarine start
+    public void updateDemand(int minimumDemand) {
+        this.demand = Math.max(minimumDemand, this.demand + this.uses - (this.maxUses - this.uses)); // Paper
+    }
+    // Prismarine end
+
     public ItemStack assemble() {
         return this.result.copy();
     }
diff --git a/src/main/java/net/prismarineteam/prismarine/PrismarineWorldConfig.java b/src/main/java/net/prismarineteam/prismarine/PrismarineWorldConfig.java
index 10c3b105adfd91f8b1f21caed0aaee12ee043d03..cc3d74ee9edf4dd85182b326e76684f484741e11 100644
--- a/src/main/java/net/prismarineteam/prismarine/PrismarineWorldConfig.java
+++ b/src/main/java/net/prismarineteam/prismarine/PrismarineWorldConfig.java
@@ -78,8 +78,10 @@ public class PrismarineWorldConfig {
 
     public boolean villagerLobotomized = false;
     public int villagerLobotomizeCheckInterval = 60;
+    public int villagerMinimumDemand = 0;
     private void villagerSettings() {
         villagerLobotomized = getBoolean("mobs.villager.lobotomize.enabled", villagerLobotomized);
         villagerLobotomizeCheckInterval = getInt("mobs.villager.lobotomize.check-interval", villagerLobotomizeCheckInterval);
+        villagerMinimumDemand = getInt("mobs.villager.minimum-demand", villagerMinimumDemand);
     }
 }
\ No newline at end of file
