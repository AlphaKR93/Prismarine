From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Alpha <alphakr93@outlook.com>
Date: Sat, 8 Jan 2022 12:26:46 +0900
Subject: [PATCH] Add back "Use normal context, which is already lazy" Airplane
 Patch


diff --git a/src/main/java/io/papermc/paper/util/CollisionUtil.java b/src/main/java/io/papermc/paper/util/CollisionUtil.java
index 58629451977c89db2fa895bde946135784a0d8bc..12e40cefd37c5a5e6010814f9ddbcc684cdf66ba 100644
--- a/src/main/java/io/papermc/paper/util/CollisionUtil.java
+++ b/src/main/java/io/papermc/paper/util/CollisionUtil.java
@@ -519,7 +519,7 @@ public final class CollisionUtil {
                             if ((edgeCount != 1 || blockData.shapeExceedsCube()) && (edgeCount != 2 || blockData.getBlock() == Blocks.MOVING_PISTON)) {
                                 mutablePos.set(blockX, blockY, blockZ);
                                 if (collisionShape == null) {
-                                    collisionShape = new LazyEntityCollisionContext(entity);
+                                    collisionShape = CollisionContext.of(entity); // Airplane - use normal context, we already tore it apart // Prismarine
                                 }
                                 VoxelShape voxelshape2 = blockData.getCollisionShape(getter, mutablePos, collisionShape);
                                 if (voxelshape2 != Shapes.empty()) {
@@ -599,6 +599,8 @@ public final class CollisionUtil {
         }
     }
 
+    // Airplane start - unneeded // Prismarine start
+    /*
     public static final class LazyEntityCollisionContext extends EntityCollisionContext {
 
         private CollisionContext delegate;
@@ -632,6 +634,8 @@ public final class CollisionUtil {
             return this.getDelegate().canStandOnFluid(state, fluid);
         }
     }
+    */
+    // Airplane end // Prismarine end
 
     private CollisionUtil() {
         throw new RuntimeException();
