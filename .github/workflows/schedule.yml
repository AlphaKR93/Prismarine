name: Scheduled Upstream

on:
  push:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: "*/20 * * * *"

env:
  paper: PaperMC/Paper
  puff: pufferfish-gg/Pufferfish
  purp: AlphaKR93/Purpur
  pris: PrismarineTeam/Prismarine

  papb: master
  pufb: ver/1.18
  purb: ver/1.18.2
  prib: ver/1.18.2

jobs:
  check:
    name: Check Upstreams
    if: "!startsWith(github.event.commits[0].message, '[CI-Skip]')"
    runs-on: ubuntu-20.04
    outputs:
      upstream: ${{ steps.check-paper.outputs.upstream }}

      paper: ${{ steps.check-paper.outputs.paper }}
      pufferfish: ${{ steps.check-pufferfish.outputs.pufferfish }}
      purpur: ${{ steps.check-purpur.outputs.purpur }}

      before: ${{ steps.check-paper.outputs.before }}
      beforepufferfish: ${{ steps.check-pufferfish.outputs.before }}
      beforepurpur: ${{ steps.check-purpur.outputs.before }}
    steps:
      - uses: actions/checkout@main

      - name: Clone Repository
        run: |
          git clone --recursive -b ${{ env.prib }} https://github.com/${{ env.pris }}.git
      
      - name: Check Paper Commit
        id: check-paper
        run: |
          upstream=$(git ls-remote https://github.com/${{ env.paper }} | grep ${{ env.papb }} | cut -f 1)
          current=$(cat Prismarine/gradle.properties | grep paperCommit | sed 's/paperCommit = //')
          if [ "$current" != "$upstream" ]; then paper=true; fi
          echo "::set-output name=paper::$paper"
          echo "::set-output name=before::$current"
          echo "::set-output name=upstream::$upstream"
          echo $current
          echo $upstream
          echo $paper

      - name: Check Pufferfish Commit
        id: check-pufferfish
        run: |
          upstream=$(git ls-remote https://github.com/${{ env.puff }} | grep ${{ env.pufb }} | cut -f 1)
          current=$(cat upstream-data | grep "pufferfish" | sed 's/pufferfish: //')
          if [ "$current" != "$upstream" ]; then pufferfish=true; fi
          echo "::set-output name=pufferfish::$pufferfish"
          echo "::set-output name=before::$current"
          echo $current
          echo $pufferfish
      
      - name: Check Purpur Commit
        id: check-purpur
        run: |
          upstream=$(git ls-remote https://github.com/${{ env.purp }} | grep ${{ env.purb }} | cut -f 1)
          current=$(cat upstream-data | grep "purpur" | sed 's/purpur: //')
          if [ "$current" != "$upstream" ]; then purpur=true; fi
          echo "::set-output name=purpur::$purpur"
          echo "::set-output name=before::$current"
          echo $current
          echo $purpur

  upstream-paper:
    name: Upstream Paper
    runs-on: ubuntu-20.04
    needs: check
    if: needs.check.outputs.paper == 'true' && !(needs.check.outputs.pufferfish == 'true') && !(needs.check.outputs.purpur == 'true')
    steps:
      - uses: actions/checkout@main

      - uses: actions/setup-java@main
        with:
          distribution: temurin
          java-version: 17.0.2

      - name: Configure Git
        run: git config --global user.email "alphakr93@outlook.com" && git config --global user.name "AlphaKR93"
        
      - name: Clone Repository
        run: git clone --recursive -b ${{ env.prib }} https://github.com/${{ env.pris }}.git

      - name: Update Upstream
        run: |
          cd Prismarine
          sed -i 's/paperCommit = .*/paperCommit = '"${{ needs.check.outputs.upstream }}"'/' gradle.properties
          ./gradlew applyPatches --stacktrace
      
      - name: Rebuild Patches
        run: | 
          cd Prismarine
          ./gradlew rebuildPatches

      - name: Commit Changes
        run: |
          cd Prismarine
          git config --global user.email "actions@github.com" && git config --global user.name "Github Actions"
          paper=$(curl -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ env.paper }}/compare/${{ needs.check.outputs.before }}...HEAD | jq -r '.commits[] | "\n${{ env.paper }}@\(.sha[:7]) \(.commit.message | split("\r\n")[0] | split("\n")[0])"')
          log="Updated Upstream (Paper)\n\nUpstream has released updates that appear to apply and compile correctly\n\nPaper Changes:\n$paper"
          git add .
          echo -e "$log" | git commit -F -

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.PUSH_TOKEN }}
          directory: ./Prismarine
          repository: PrismarineTeam/Prismarine

  upstream-pufferfish:
    name: Upstream Pufferfish
    runs-on: ubuntu-20.04
    needs: check
    if: needs.check.outputs.pufferfish == 'true' && !(needs.check.outputs.purpur == 'true')
    steps:
      - uses: actions/checkout@main

      - uses: actions/setup-java@main
        with:
          distribution: temurin
          java-version: 17.0.2

      - name: Configure Git
        run: |
          git config --global user.email "alphakr93@outlook.com" && git config --global user.name "AlphaKR93"
          upstream=${{ needs.check.outputs.upstream }} > $GITHUB_ENV

      - name: Initial Pufferfish Sources
        run: |
          git clone --recursive -b ${{ env.pufb }} https://github.com/${{ env.puff }}.git
          cd Pufferfish/
          pufferfish=$(git log -1 --pretty=oneline | cut -c 1-40) && echo "pufferfish=$pufferfish" > $GITHUB_ENV
          sed -i 's/paperRef=.*/paperRef='"${{ needs.check.outputs.upstream }}"'/' gradle.properties
          ./gradlew applyPatches --stacktrace

      - name: MC Dev Sources
        run: |
          sed -i 's/pufferfish: .*/pufferfish: '"${{ env.pufferfish }}"'/' upstream-data
          cd Pufferfish/.gradle/caches/paperweight/upstreams/paper/Paper-Server
          cp -rf .gradle/caches/paperweight/mc-dev-sources/net/* src/main/java/net
          git add .
          git commit -m "Initial"
      
      - name: Pufferfish Server Changes
        run: |
          cd Pufferfish/pufferfish-server/
          rm -rdf .git
          cp -rf .gradle/caches/paperweight/mc-dev-sources/net/* src/main/java/net
          mv -f ../.gradle/caches/paperweight/upstreams/paper/Paper-Server/.git ./
          git add .
          echo -e "Pufferfish Server Changes\n\nOriginal by Kevin Raneri <kevin.raneri@gmail.com>\n\nCopyright (C) 2022 Pufferfish Studios LLC\n\nThis program is free software: you can redistribute it and/or modify it\nunder the terms of the GNU General Public License as published by the\nFree Software Foundation, either version 3 of the License, or (at your\noption) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nGeneral Public License for more details.\n\nYou should have received a copy of the GNU General Public License along\nwith this program.  If not, see <http://www.gnu.org/licenses/>." | git commit -F -

      - name: Pufferfish API Changes
        run: |
          cd Pufferfish/pufferfish-api
          rm -rdf .git
          mv -f ../.gradle/caches/paperweight/upstreams/paper/Paper-API/.git ./
          git add .
          echo -e "Pufferfish API Changes\n\nOriginal by Kevin Raneri <kevin.raneri@gmail.com>\n\nCopyright (C) 2022 Pufferfish Studios LLC\n\nThis program is free software: you can redistribute it and/or modify it\nunder the terms of the GNU General Public License as published by the\nFree Software Foundation, either version 3 of the License, or (at your\noption) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nGeneral Public License for more details.\n\nYou should have received a copy of the GNU General Public License along\nwith this program.  If not, see <http://www.gnu.org/licenses/>." | git commit -F -
          
      - name: Build Patches
        run: |
          git clone --recursive -b ${{ env.prib }} https://github.com/${{ env.pris }}.git
          cd Pufferfish/
          ./gradlew rebuildPatches
          cp -rf patches/api/*-Pufferfish-API-Changes.patch ../Prismarine/patches/api/0001-Pufferfish-API-Changes.patch
          cp -rf patches/server/*-Pufferfish-Server-Changes.patch ../Prismarine/patches/server/0001-Pufferfish-Server-Changes.patch

      - name: Rebuild Patches
        run: |
          cd Prismarine/
          sed -i 's/paperCommit = .*/paperCommit = '"${{ needs.check.outputs.upstream }}"'/' gradle.properties
          ./gradlew applyPatches --stacktrace && ./gradlew rebuildPatches --stacktrace

      - name: Commit changes
        run: |
          git config --global user.email "actions@github.com" && git config --global user.name "Github Actions"

          if [ "${{ needs.check.outputs.paper }}" == "true" ]; then
            upstream="Paper"
            commit=$(curl -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ env.paper }}/compare/${{ needs.check.outputs.before }}...HEAD | jq -r '.commits[] | "\n${{ env.paper }}@\(.sha[:7]) \(.commit.message | split("\r\n")[0] | split("\n")[0])"')
            log="$log\n\nPaper Changes:\n$commit"
          fi
          
          if [ "${{ needs.check.outputs.pufferfish }}" == "true" ]; then
            echo "Pufferfish"
            if [ "$upstream" != "" ]; then upstream="$upstream & Pufferfish"; else upstream="Pufferfish"; fi
            commit=$(curl -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ env.puff }}/compare/${{ needs.check.outputs.before }}...HEAD | jq -r '.commits[] | "\n${{ env.puff }}@\(.sha[:7]) \(.commit.message | split("\r\n")[0] | split("\n")[0])"')
            log="$log\n\nPufferfish Changes:\n$commit"
          fi

          git add .
          git commit -m "Update Upstream ($upstream)"
          
          cd Prismarine/
          git add .
          log="Update Upstream ($upstream)\n\nUpstream has released updates that appear to apply and compile correctly$log"
          
          echo -e $log | git commit -F -

      - name: Push new commit
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.PUSH_TOKEN }}
          directory: ./
          repository: PrismarineTeam/PrismarineManager

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.PUSH_TOKEN }}
          directory: ./Prismarine
          repository: PrismarineTeam/Prismarine

  upstream-purpur:
    name: Upstream Purpur
    runs-on: ubuntu-20.04
    needs: check
    if: needs.check.outputs.purpur == 'true'
    steps:
      - uses: actions/checkout@main

      - uses: actions/setup-java@main
        with:
          distribution: temurin
          java-version: 17.0.2

      - name: Configure Git
        run: |
          git config --global user.email "alphakr93@outlook.com" && git config --global user.name "AlphaKR93"
          upstream=${{ needs.check.outputs.upstream }} > $GITHUB_ENV

      - name: Initial Pufferfish Sources
        run: |
          git clone --recursive -b ${{ env.pufb }} https://github.com/${{ env.puff }}.git
          cd Pufferfish/
          pufferfish=$(git log -1 --pretty=oneline | cut -c 1-40) && echo "pufferfish=$pufferfish" > $GITHUB_ENV
          sed -i 's/paperRef=.*/paperRef='"${{ needs.check.outputs.upstream }}"'/' gradle.properties
          ./gradlew applyPatches --stacktrace

      - name: MC Dev Sources
        run: |
          sed -i 's/pufferfish: .*/pufferfish: '"${{ env.pufferfish }}"'/' upstream-data
          cd Pufferfish/.gradle/caches/paperweight/upstreams/paper/Paper-Server
          cp -rf .gradle/caches/paperweight/mc-dev-sources/net/* src/main/java/net
          git add .
          git commit -m "Initial"
      
      - name: Pufferfish Server Changes
        run: |
          cd Pufferfish/pufferfish-server/
          rm -rdf .git
          cp -rf .gradle/caches/paperweight/mc-dev-sources/net/* src/main/java/net
          mv -f ../.gradle/caches/paperweight/upstreams/paper/Paper-Server/.git ./
          git add .
          echo -e "Pufferfish Server Changes\n\nOriginal by Kevin Raneri <kevin.raneri@gmail.com>\n\nCopyright (C) 2022 Pufferfish Studios LLC\n\nThis program is free software: you can redistribute it and/or modify it\nunder the terms of the GNU General Public License as published by the\nFree Software Foundation, either version 3 of the License, or (at your\noption) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nGeneral Public License for more details.\n\nYou should have received a copy of the GNU General Public License along\nwith this program.  If not, see <http://www.gnu.org/licenses/>." | git commit -F -

      - name: Pufferfish API Changes
        run: |
          cd Pufferfish/pufferfish-api
          rm -rdf .git
          mv -f ../.gradle/caches/paperweight/upstreams/paper/Paper-API/.git ./
          git add .
          echo -e "Pufferfish API Changes\n\nOriginal by Kevin Raneri <kevin.raneri@gmail.com>\n\nCopyright (C) 2022 Pufferfish Studios LLC\n\nThis program is free software: you can redistribute it and/or modify it\nunder the terms of the GNU General Public License as published by the\nFree Software Foundation, either version 3 of the License, or (at your\noption) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nGeneral Public License for more details.\n\nYou should have received a copy of the GNU General Public License along\nwith this program.  If not, see <http://www.gnu.org/licenses/>." | git commit -F -
          
      - name: Build Pufferfish Patches
        run: |
          cd Pufferfish/
          ./gradlew rebuildPatches

      - name: Initial Purpur Sources
        run: |
          git clone --recursive -b ${{ env.purb }} https://github.com/${{ env.purp }}.git
          cd Purpur/
          purpur=$(git log -1 --pretty=oneline | cut -c 1-40) && echo "purpur=$purpur" > $GITHUB_ENV
          sed -i 's/paperCommit = .*/paperCommit = '"${{ needs.check.outputs.upstream }}"'/' gradle.properties
          cp -rf ../Pufferfish/patches/api/*-Pufferfish-API-Changes.patch patches/api/0001-Pufferfish-API-Changes.patch
          cp -rf ../Pufferfish/patches/server/*-Pufferfish-Server-Changes.patch patches/server/0001-Pufferfish-Server-Changes.patch
          ./gradlew applyPatches

      - name: Purpur Server Changes
        run: |
          sed -i 's/purpur: .*/purpur: '"${{ env.purpur }}"'/' upstream-data
          cd Purpur/Purpur-Server/
          rm -rdf .git
          cp -rf .gradle/caches/paperweight/mc-dev-sources/net/* src/main/java/net
          mv -f ../../Pufferfish/pufferfish-server/.git ./
          git add .
          echo -e "Purpur Server Changes\n\nOriginal by PurpurMC Team\n\nCopyright (C) 2022 PurpurMC LLC\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n"Software"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE." | git commit -F -

      - name: Purpur API Changes
        run: |
          cd Purpur/Purpur-API/
          rm -rdf .git
          mv -f ../../Pufferfish/pufferfish-api/.git ./
          git add .
          echo -e "Purpur API Changes\n\nOriginal by PurpurMC Team\n\nCopyright (C) 2022 PurpurMC LLC\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n"Software"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE." | git commit -F -

      - name: Build Patches
        run: |
          git clone --recursive -b ${{ env.prib }} https://github.com/${{ env.pris }}.git
          cd Purpur/
          ./gradlew rebuildPatches
          cp -rf patches/api/*-Pufferfish-API-Changes.patch ../Prismarine/patches/api/0001-Pufferfish-API-Changes.patch
          cp -rf patches/server/*-Pufferfish-Server-Changes.patch ../Prismarine/patches/server/0001-Pufferfish-Server-Changes.patch
          cp -rf patches/api/*-Purpur-API-Changes.patch ../Prismarine/patches/api/0002-Purpur-API-Changes.patch
          cp -rf patches/server/*-Purpur-Server-Changes.patch ../Prismarine/patches/server/0002-Purpur-Server-Changes.patch

      - name: Rebuild Patches
        run: |
          cd Prismarine/
          sed -i 's/paperCommit = .*/paperCommit = '"${{ needs.check.outputs.upstream }}"'/' gradle.properties
          ./gradlew applyPatches --stacktrace && ./gradlew rebuildPatches --stacktrace

      - name: Commit changes
        run: |
          git config --global user.email "actions@github.com" && git config --global user.name "Github Actions"
          
          if [ "${{ needs.check.outputs.paper }}" == "true" ]; then
            upstream="Paper"
            commit=$(curl -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ env.paper }}/compare/${{ needs.check.outputs.before }}...HEAD | jq -r '.commits[] | "\n${{ env.paper }}@\(.sha[:7]) \(.commit.message | split("\r\n")[0] | split("\n")[0])"')
            log="$log\n\nPaper Changes:\n$commit"
          fi
          
          if [ "${{ needs.check.outputs.pufferfish }}" == "true" ]; then
            echo "Pufferfish"
            if [ "$upstream" != "" ]; then upstream="$upstream & Pufferfish"; else upstream="Pufferfish"; fi
            commit=$(curl -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ env.puff }}/compare/${{ needs.check.outputs.beforepufferfish }}...${{ env.pufferfish }} | jq -r '.commits[] | "\n${{ env.puff }}@\(.sha[:7]) \(.commit.message | split("\r\n")[0] | split("\n")[0])"')
            log="$log\n\nPufferfish Changes:\n$commit"
          fi

          if [ "${{ needs.check.outputs.purpur }}" == "true" ]; then
            if [ "$upstream" != "" ]; then upstream="$upstream & Purpur"; else upstream="Purpur"; fi
            commit=$(curl -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ env.purp }}/compare/${{ needs.check.outputs.beforepurpur }}...${{ env.purpur }} | jq -r '.commits[] | "\n${{ env.purp }}@\(.sha[:7]) \(.commit.message | split("\r\n")[0] | split("\n")[0])"')
            log="$log\n\nPurpur Changes:\n$commit"
          fi

          git add .
          git commit -m "Update Upstream ($upstream)"
          
          cd Prismarine/
          git add .
          log="Update Upstream ($upstream)\n\nUpstream has released updates that appear to apply and compile correctly$log"
          
          echo -e $log | git commit -F -

      - name: Push new commit
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.PUSH_TOKEN }}
          directory: ./
          repository: PrismarineTeam/PrismarineManager

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.PUSH_TOKEN }}
          directory: ./Prismarine
          repository: PrismarineTeam/Prismarine
